
/**
 * Generated by ExoCoding 0.0.1
 */

import { AxiosRequestConfig } from 'axios';
import { axios } from '@/lib/axios';
import { Page } from '@/types';
import { TaskHdr } from '@/modules/authentication/types';
import { TaskHdrDTO } from '.';

/**
 * Delete a list of TaskHdr
*
* @param {options} Override http request option.
* @returns TaskHdr */
export const deleteTaskHdrList = (options: AxiosRequestConfig = {}): Promise<any[]> => {
    return axios.delete(`/taskhdrlist`, options);
};

/**
 * Update one TaskHdr
*
* @param {id} CRUD key input parameter
* @param {body} CRUD object input parameter
* @param {options} Override http request option.
* @returns TaskHdr */
export const putTaskHdr = (id:  number, body: TaskHdrDTO, options: AxiosRequestConfig = {}): Promise<TaskHdr> => {
    return axios.put(`/taskhdr/${id}`, body, options);
};

/**
 * Read a list of TaskHdr
*
* @param {options} Override http request option.
* @returns TaskHdr */
export const getTaskHdrList = (options: AxiosRequestConfig = {}): Promise<TaskHdr[]> => {
    return axios.get(`/taskhdrlist`, options);
};

/**
 * Delete one TaskHdr
*
* @param {id} CRUD key input parameter
* @param {options} Override http request option.
* @returns TaskHdr */
export const deleteTaskHdr = (id:  number, options: AxiosRequestConfig = {}): Promise<any> => {
    return axios.delete(`/taskhdr/${id}`, options);
};

/**
 * Create a list of TaskHdr
*
* @param {body} CRUD object input parameter
* @param {options} Override http request option.
* @returns TaskHdr */
export const postTaskHdrList = (body: TaskHdrDTO, options: AxiosRequestConfig = {}): Promise<TaskHdr[]> => {
    return axios.post(`/taskhdrlist`, body, options);
};

/**
 * Update a list of TaskHdr
*
* @param {body} CRUD object input parameter
* @param {options} Override http request option.
* @returns TaskHdr */
export const putTaskHdrList = (body: TaskHdrDTO, options: AxiosRequestConfig = {}): Promise<TaskHdr[]> => {
    return axios.put(`/taskhdrlist`, body, options);
};

/**
 * Delete a list of TaskHdr
*
* @param {options} Override http request option.
* @returns TaskHdr */
export const deleteTaskHdrListById = (options: AxiosRequestConfig = {}): Promise<any[]> => {
    return axios.delete(`/taskhdrlistById`, options);
};

/**
 * Create one TaskHdr
*
* @param {body} CRUD object input parameter
* @param {options} Override http request option.
* @returns TaskHdr */
export const postTaskHdr = (body: TaskHdrDTO, options: AxiosRequestConfig = {}): Promise<TaskHdr> => {
    return axios.post(`/taskhdr`, body, options);
};

/**
 * Read one TaskHdr
*
* @param {id} CRUD key input parameter
* @param {options} Override http request option.
* @returns TaskHdr */
export const getTaskHdr = (id:  number, options: AxiosRequestConfig = {}): Promise<TaskHdr> => {
    return axios.get(`/taskhdr/${id}`, options);
};
