
/**
 * Generated by ExoCoding 0.0.1
 */

import React, {useContext} from 'react';
import { useRoutes, RouteObject, Navigate } from 'react-router-dom';
import { ROLES } from '@/modules/authentication/session/accesses';
import { Authorization } from '@/modules/authentication/session/authorization';
import { Homepage } from '@/modules/main/pages/Homepage';
import { Default_Layout } from '@/modules/main/layout/Default_Layout';
import { Login } from '@/modules/authentication/pages/authentication/Login';
import { Sign_up } from '@/modules/authentication/pages/authentication/Sign_up';
import SessionContext from "@/modules/authentication/session";

export const AppRoutes = () => {
  const session = useContext(SessionContext);

  const publicRoutes: RouteObject[] = [
    { path: '/', element: <Default_Layout />, children: [{ index: true, element: <Homepage /> } ]},
    { path: '/login', element: <Default_Layout />, children: [{ index: true, element: <Login /> } ]},
    { path: '/signup', element: <Default_Layout />, children: [{ index: true, element: <Sign_up /> } ]}
  ];

  const fallbackRoute = <Navigate to={session.isLoggedIn ? '/' : '/login'} replace />;

  const protectedRoutes: RouteObject[] = [
  ];

  const element = useRoutes([...publicRoutes, ...protectedRoutes]);

  return <>{element}</>;
};
