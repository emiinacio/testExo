package com.bigoviw887.modulo.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import java.math.BigDecimal;
import java.util.LinkedList;
import java.util.List;
import javax.annotation.processing.Generated;
import lombok.Data;

/** Tabela Detail */
@Generated(value = "com.exocoding.codegen", comments = "Generated by ExoCoding 0.0.1-SNAPSHOT")
@Data
@Entity
@Table
public class TaskDet extends AbstractEntity {

  @Column(nullable = false)
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  protected Long id;

  // Parent task
  @OneToMany(mappedBy = "taskHdr", fetch = FetchType.LAZY, orphanRemoval = true)
  @Column(name = "id_FK", nullable = false)
  protected List<TaskHdr> taskDetails = new LinkedList<>();

  // User identifier
  @Column(nullable = false, length = 10)
  protected String username;

  // Associated cost
  @Column(precision = 10, scale = 2)
  protected BigDecimal cost;

  public void addTaskDetails(TaskHdr taskDetails) {
    this.taskDetails.add(taskDetails);
    taskDetails.setTaskHdr(this);
  }

  public void removeTaskDetails(TaskHdr taskDetails) {
    this.taskDetails.remove(taskDetails);
    taskDetails.setTaskHdr(null);
  }

  public void setTaskDetails(List<TaskHdr> taskDetails) {
    if (this.taskDetails != null) {
      this.taskDetails.forEach(z -> z.setTaskHdr(null));
    }
    if (taskDetails != null) {
      taskDetails.forEach(z -> z.setTaskHdr(this));
    }
    this.taskDetails = taskDetails;
  }
}
